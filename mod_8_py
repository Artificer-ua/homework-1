from datetime import datetime

users = [
    { 'name' : 'Vlad', 'birthday': datetime.strptime('2023-09-03', '%Y-%m-%d').date()},
    { 'name' : 'Simon', 'birthday': datetime.strptime('2023-09-06', '%Y-%m-%d').date()},
    { 'name' : 'Maryna', 'birthday': datetime.strptime('2023-09-8', '%Y-%m-%d').date()},
    { 'name' : 'Olga', 'birthday': datetime.strptime('2023-09-5', '%Y-%m-%d').date()},
    { 'name' : 'Denys', 'birthday': datetime.strptime('2023-09-6', '%Y-%m-%d').date()}
        ]

days_name = {
    1: "Monday",
    2: "Tuesday",
    3: "Wednesday",
    4: "Thursday",
    5: "Friday",
    6: "Saturday",
    7: "Sunday",
}
def get_birthdays_per_week(users):
    this_week_birthday = dict()
    current_date = datetime.today()
    current_week = datetime.isocalendar(current_date)
    for val in users:
        if current_date.isoweekday() == 1 and val.get('birthday').isocalendar().week == current_week.week-1:
            if  val.get('birthday').isoweekday() == 6 or val.get('birthday').isoweekday() == 7:
                this_week_birthday.setdefault(days_name.get(1), []).append(val.get('name'))
        if val.get('birthday').isocalendar().week == current_week.week:
            if val.get('birthday').isoweekday() in range(current_date.isoweekday(), 5+1):
                this_week_birthday.setdefault(days_name.get(val.get('birthday').isoweekday()), []).append(val.get('name'))


    if not this_week_birthday:
        return "No birthdays at this week :("
    else:
        return this_week_birthday

def print_week_birthday(print_data):
    print("Don't forget to wish happy birthday for colleague:")
    for key, item in days_name.items():
        if print_data.get(item):
            print(days_name.get(key), ", ".join(print_data.get(item)), sep=': ')


print_week_birthday(get_birthdays_per_week(users))



